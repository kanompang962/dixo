name: CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Frontend: Angular
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Angular dependencies
        working-directory: ./web
        run: npm install
      - name: Build Angular
        working-directory: ./web
        run: npm run build -- --configuration production
      - name: Test Angular
        working-directory: ./web
        run: npm run test -- --watch=false --browsers=ChromeHeadless

      # Backend: .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore .NET dependencies
        working-directory: ./api
        run: dotnet restore
      - name: Build .NET
        working-directory: ./api
        run: dotnet build --no-restore
      - name: Test .NET
        working-directory: ./api
        run: dotnet test --no-build --verbosity normal

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Angular Docker image
        working-directory: ./web
        run: |
          docker build -t kanompang962/dixo-web:latest .
          docker push kanompang962/dixo-web:latest
      - name: Build and push .NET Docker image
        working-directory: ./api
        run: |
          docker build -t kanompang962/dixo-api:latest .
          docker push kanompang962/dixo-api:latest

  deploy:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Copy docker-compose to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/${{ secrets.VPS_USERNAME }}/dixo"
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            whoami
            docker --version
            docker-compose --version
            ls -la /home/${{ secrets.VPS_USERNAME }}/dixo
            cat /home/${{ secrets.VPS_USERNAME }}/dixo/docker-compose.yml
            cd /home/${{ secrets.VPS_USERNAME }}/dixo
            docker-compose pull
            docker-compose up -d